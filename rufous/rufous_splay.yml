units:
  # Parameters
  # ==========
  kx: cx + 0.5    # Key spacing horizontal
  ky: cy + 0.5    # Key spacing vertical
  sf: 16          # Switch footprint (square)
  angle: 22       # Angle between halves
  pinky_splay: 5  # Degrees of splay between pinky and ring columns
  ring_splay: 3   # Degrees of splay between ring and index columns
  visual_x: cx    # Visual representation of keycaps horizontal
  visual_y: cy    # Visual representation of keycaps vertical

points:
  rotate: -angle + pinky_splay + ring_splay
  mirror:
    ref: matrix_inner_top
    shift: [0.5sf, 0.5sf]
    distance: 13
  zones.matrix:
    rows:
      bottom.padding: ky
      home.padding: ky
      top.padding: ky
    columns.pinky:
      spread: kx
      rows:
        bottom.skip: true
        home:
          bind: [0.5ky,0.5kx,0,0]
          row_net: P2
          column_net: P6
        top:
          bind: [0,0.5kx,0.5ky,0]
          row_net: P0
          column_net: P6
        home.mirror:
          row_net: P3
          column_net: P10
        top.mirror:
          row_net: P1
          column_net: P10
    columns.ring:
      spread: kx
      stagger: 2/3ky
      rotate: -pinky_splay
      origin: [0,-3]
      rows:
        bottom:
          bind: [0.5ky,0,0,0]
          row_net: P4
          column_net: P6
        home:
          bind: [0,0.5kx,0,0]
          row_net: P3
          column_net: P6
        top:
          bind: [0,0.5kx,0.5ky,0]
          row_net: P1
          column_net: P6
        bottom.mirror:
          row_net: P5
          column_net: P9
        home.mirror:
          row_net: P2
          column_net: P10
        top.mirror:
          row_net: P0
          column_net: P10
    columns.middle:
      spread: kx
      stagger: 0.25ky
      rotate: -ring_splay
      origin: [0,-8]
      rows:
        bottom:
          bind: [0.5ky,0.5kx,0,0.5kx]
          row_net: P5
          column_net: P6
        home:
          bind: [0,0.5kx,0,0]
          row_net: P2
          column_net: P7
        top:
          bind: [0,0,0.5ky,0]
          row_net: P0
          column_net: P7
        bottom.mirror:
          row_net: P4
          column_net: P9
        home.mirror:
          row_net: P3
          column_net: P9
        top.mirror:
          row_net: P1
          column_net: P9
    columns.index:
      spread: kx
      stagger: -0.25ky
      rows:
        bottom:
          bind: [0.5ky,0,0,0]
          row_net: P4
          column_net: P7
        home:
          row_net: P3
          column_net: P7
        top:
          bind: [0,0,0.5ky,0.5kx]
          row_net: P1
          column_net: P7
        bottom.mirror:
          row_net: P5
          column_net: P8
        home.mirror:
          row_net: P2
          column_net: P9
        top.mirror:
          row_net: P0
          column_net: P9
    columns.inner:
      spread: kx
      stagger: -0.5ky
      rows:
        bottom.skip: true
        home:
          bind: [0.5ky,0,0.5ky,0.5kx]
          row_net: P2
          column_net: P8
          tags:
            center_top: true
        top:
          bind: [0,0,0.5ky,0.5kx]
          row_net: P0
          column_net: P8
          tags:
            center_top: true
        home.mirror:
          row_net: P3
          column_net: P8
        top.mirror:
          row_net: P1
          column_net: P8
  zones.thumb:
    anchor:
      ref: matrix_index_bottom
      shift: [1/3ky, -22]
    columns.tucky:
      key:
        name: thumb_tucky
        rotate: 90
        bind: [0, 0.5ky, 0.5kx, 0]
        row_net: P5
        column_net: P7
      key.mirror:
        row_net: P4
        column_net: P10
    columns.reachy:
      spread: ky
      stagger: -0.25kx
      key:
        name: thumb_reachy
        rotate: 90
        bind: [0, 1.5ky, 0, 0]
        row_net: P4
        column_net: P8
      key.mirror:
        row_net: P5
        column_net: P10
outlines:
  exports:
    _outer_raw:
      - type: keys
        side: left
        size: sf
      - type: keys
        side: right
        size: sf
    _center_raw:
      - type: polygon
        points:
        - ref: matrix_inner_top
          shift: &top_offset [0,-0.7ky]
        - ref: mirror_matrix_inner_top
          shift: *top_offset
        - ref: mirror_thumb_reachy
        - ref: thumb_reachy
      - type: keys
        side: left
        size: sf
        tags: [center_top]  # Include the top center keys in addition to the center polygon
      - type: keys
        side: right
        size: sf
        tags: [center_top]
    _panel:
      - name: _center_raw
        fillet: 3  # The inner rounding where the glue meets the top center keys
      - operation: subtract
        type: circle
        anchor:
          ref: [thumb_reachy, mirror_thumb_reachy]
          shift: [0, 0.5sf - 60]
        radius: 60  # Should be the same as the last number in `shift` above
      - name: _outer_raw
    panel:
      - name: _panel
        fillet: 1.5
    _switches:
      - type: keys
        side: left
        size: 14
        bound: false
      - type: keys
        side: right
        size: 14
        bound: false
    demo_switches:
      - name: panel
      - operation: stack
        name: _switches
        fillet: 0.5
    _keycaps:
      - type: keys
        side: left
        size: [visual_x, visual_y]
        bound: false
      - type: keys
        side: right
        size: [visual_x, visual_y]
        bound: false
    demo_keycaps:
      - name: panel
      - operation: stack
        name: _keycaps
points.key:
  footprints:
    - type: choc
      nets:
        from: =row_net
        to: =colrow
      params:
        keycaps: true
    - type: diode
      anchor:
        shift: [0, -4.7]
        rotate: 180
      nets:
        from: =colrow
        to: =column_net
      params:
        through_hole: false
pcbs:
  rufous_splay:
    outlines:
      main:
        outline: panel
    footprints:
      - type: xiao
        anchor:
          - ref: [matrix_inner_top, mirror_matrix_inner_top]
            shift: [-xiao_x / 2, -xiao_y]
          - shift: *top_offset
      - type: mountinghole
        anchor:
          ref: matrix_inner_home
          shift: &mounting_position [-0.5kx + 4, -ky + 4]
      - type: mountinghole
        anchor:
          ref: mirror_matrix_inner_home
          shift: *mounting_position
