units:
  # Parameters
  # ==========
  capx: cx        # Key cap size horizontal
  capy: cy        # Key cap size vertical
  kx: cx + 0.5    # Key spacing horizontal
  ky: cy + 0.5    # Key spacing vertical
  pinky_stagger: 2/3ky
  pinky_splay: 5  # Degrees of splay between pinky and ring columns
  pinky_adj: -8   # Adjustment to compensate for splay spacing
  ring_splay: 3
  ring_adj: -8

  # Constants
  # =========
  xiao_x: 17.5
  xiao_y: 20
  visual_x: 1     # Visual representation of keycaps horizontal
  visual_y: 1     # Visual representation of keycaps vertical
  sf: 16          # Switch footprint (square)

points:
  # Key Switches
  # ============
  zones.matrix:
    rotate: pinky_splay + ring_splay
    key: &key
      width: capx
      height: capy
      tags:
        keys: true
      footprints:
      - type: choc
        nets:
          from: =row_net
          to: =column_net
        params:
          keycaps: true
    rows:
      home.padding: ky
      top.padding: ky
    columns.pinky:
      spread: kx
      rows:
        home:
          bind: [0.5ky, 0.5kx, 0, 0]
          row_net: P2
          column_net: P6
        top:
          bind: [0, 0.5kx, 0.5ky, 0]
          row_net: P0
          column_net: P6
        home.mirror:
          row_net: P3
          column_net: P10
        top.mirror:
          row_net: P1
          column_net: P10
    columns.ring:
      spread: kx
      stagger: pinky_stagger
      rotate: -pinky_splay
      origin: [0, pinky_adj]
      rows:
        home:
          bind: [0, 0.5kx, 0, 0]
          row_net: P3
          column_net: P6
        top:
          bind: [0, 0.5kx, 0.5ky, 0]
          row_net: P1
          column_net: P6
        home.mirror:
          row_net: P2
          column_net: P10
        top.mirror:
          row_net: P0
          column_net: P10
    columns.middle:
      spread: kx
      stagger: 0.25ky
      rotate: -ring_splay
      origin: [0, ring_adj]
      rows:
        home:
          bind: [0, 0.5kx, 0, 0]
          row_net: P2
          column_net: P7
        top:
          bind: [0, 0, 0.5ky, 0]
          row_net: P0
          column_net: P7
        home.mirror:
          row_net: P3
          column_net: P9
        top.mirror:
          row_net: P1
          column_net: P9
    columns.index:
      spread: kx
      stagger: -0.25ky
      rows:
        home:
          row_net: P3
          column_net: P7
        top:
          bind: [0, 0, 0.5ky, 0.5kx]
          row_net: P1
          column_net: P7
        home.mirror:
          row_net: P2
          column_net: P9
        top.mirror:
          row_net: P0
          column_net: P9
  zones.thumb:
    anchor:
      ref: matrix_index_home
      shift: [0.25kx, -22 - 0.5ky]
    key: *key
    columns:
      tucky:
        key:
          name: thumb_tucky
          bind: [0.5ky, 0.5kx, 0, 0]
          row_net: P5
          column_net: P7
        key.mirror:
          row_net: P4
          column_net: P10
      reachy:
        spread: kx
        stagger: -0.25ky
        key:
          name: thumb_reachy
          bind: [1.5ky, 0, 0, 0]
          row_net: P4
          column_net: P8
        key.mirror:
          row_net: P5
          column_net: P10

  # Outline Extents
  # ===============
  zones.top_left:
    key:
      name: top_left
      height: 0
      width: 0
    anchor:
    - ref: matrix_middle_top
      shift: [0, 0.5sf]
    - ref: matrix_pinky_home
      affect: x
      shift: [-0.75sf, 0]
  zones.top_right:
    key:
      name: top_right
      height: 0
      width: 0
    anchor:
    - ref: top_left
    - ref: thumb_reachy
      affect: x
      shift: [0.5sf, 0]
  zones.bottom_left:
    key:
      name: bottom_left
      height: 0
      width: 0      
    anchor:
    - ref: top_left
    - ref: thumb_reachy
      affect: y
      shift: [0, -0.5sf]
  zones.bottom_right:
    key:
      name: bottom_right
      height: 0
      width: 0      
    anchor:
    - ref: top_right
    - ref: bottom_left
      affect: y

  # Components
  # ==========
  zones.mcu:
    anchor:
      ref: top_right
      shift: [-0.5xiao_x - 2, -0.5xiao_y]
    key:
      name: mcu
      width: xiao_x
      height: xiao_y
      footprints:
      - type: xiao
        anchor:
          shift: [-0.5xiao_x, -0.5xiao_y]  # Anchor is topleft corner
  zones.battery:
    anchor:
      - ref: [matrix_ring_home, matrix_middle_home]
      - ref: thumb_tucky
        affect: y
        shift: [0, 0.25cy]
    key:
      name: battery
      width: 24
      height: 24

outlines.exports:
  _outer:
    - type: polygon
      points:
      - ref: top_left
      - ref: top_right
      - ref: bottom_right
      - ref: bottom_left
  _panel:
    - name: _outer
      fillet: 3
  _mcu:
    - type: rectangle
      anchor:
        ref: mcu
        shift: [-0.5sx, -0.5sy]
      size: [xiao_x, xiao_y]
  _battery:
    - type: circle
      anchor.ref: battery
      radius: 12
  key_demo:
    - _panel
    - ^_mcu
    - ^_battery
    - operation: stack
      type: keys
      side: left
      tags: [keys]
      size: [capx, capy]
      bound: false
